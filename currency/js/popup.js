class Popup{constructor(){this.storage=STORAGE,this.focusedInput=null,this.initHandlers(),this.initStorage()}initHandlers(){const a=$(document.body);a.on('change','[name="active_currency"]',(a)=>this.activeCurrencyChange(a)),a.on('focus','.currency-input',(a)=>this.saveFocus(a)),a.on('focusout','.currency-input',(a)=>this.onFocusOut(a)),a.on('input','.currency-input',(a)=>this.currencyCountChange(a)),a.on('change','[name="convert_page_money"]',(a)=>this.convertPageMoneyChange(a)),a.on('change','select',(a)=>this.currencyItemChange(a)),a.on('click','.add-item',(a)=>this.addItem(a)),a.on('click','.remove-item',(a)=>this.removeItem(a))}initStorage(){chrome.storage.local.get(this.storage,(a)=>{this.storage=a,this.renderCurrenciesBox(),$('[name="convert_page_money"]').prop('checked',this.storage.convert_page_money)})}saveStorage(){chrome.storage.local.set(this.storage)}renderCurrenciesBox(){const a=this.storage.currency_suite.map((a)=>{const b=this.storage.active_currency===a;let c=b?this.storage.active_currency_count:this.calc(a);return b&&(null===this.focusedInput?c=this.format(c):c=this.deformat(c)),`                <div class="currency-item">                    <label>                        <input type="checkbox" name="active_currency" currency-code="${a}"                            ${b?'checked':''}>                        <div class="icon-arrow"></div>                    </label>                                <div class="input-box">                        <input class="currency-input" currency-code="${a}" maxlength="12" min="0" value="${c}">                    </div>                                        ${this.currencySelect(a)}                </div>            `}).join('');$('.currencies-box').html(a),this.setFocus()}format(a){return parseFloat(a).toFixed(4).replace(/\d(?=(\d{3})+\.)/g,'$&,')}deformat(a){return a&&'string'==typeof a?a.replace(/[^0-9\.]+/g,''):a}calc(a){const b=this.deformat(this.storage.active_currency_count),c=this.storage.rates[this.storage.active_currency],d=this.storage.rates[a];return this.format(b/c*d)}currencySelect(a){let b='';for(let c in this.storage.rates){const d=a===c?'selected':'',e=c+': '+CURRENCY_NAMES[c];b+=`<option value="${c}" ${d}>${e}</option>`}return`<select>${b}</select>`}activeCurrencyChange(a){this.storage.active_currency=a.target.getAttribute('currency-code'),this.saveStorage(),this.renderCurrenciesBox()}currencyCountChange(a){this.storage.active_currency=a.target.getAttribute('currency-code'),this.storage.active_currency_count=a.target.value,this.saveStorage(),this.renderCurrenciesBox()}convertPageMoneyChange(a){this.storage.convert_page_money=a.target.checked,this.saveStorage()}currencyItemChange(){this.storage.currency_suite=[],$('select').each((a,b)=>{this.storage.currency_suite.push(b.value)}),this.saveStorage(),this.renderCurrenciesBox()}addItem(){this.storage.currency_suite.push('USD'),this.saveStorage(),this.renderCurrenciesBox()}removeItem(){2>=this.storage.currency_suite.length||(this.storage.currency_suite.pop(),this.saveStorage(),this.renderCurrenciesBox())}saveFocus(a){const b=$(a.target);try{b&&b[0]&&b[0].value&&(b[0].value=this.deformat(b[0].value),(!this.focusedInput||this.focusedInput!=$(a.target).closest('.currency-item').index())&&b[0].setSelectionRange(0,b[0].value.length))}catch(a){}this.focusedInput=$(a.target).closest('.currency-item').index()}onFocusOut(a){const b=$(a.target);b&&b[0]&&b[0].value&&(b[0].value=this.format(this.deformat(b[0].value)))}setFocus(){if(null!==this.focusedInput){const a=$('.currency-item').eq(this.focusedInput).find('.currency-input');a.trigger('focus').get(0).setSelectionRange(99,99),a.attr('type','text')}}}const p=new Popup;